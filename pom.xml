<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.fleurida.camel</groupId>
	<artifactId>camel-dynamic-router-zombie</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>bundle</packaging>
	<name>Camel Dynamic Router Zombie</name>

	<properties>
		<!-- unify the encoding for all the modules -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- core frameworks -->
		<osgi.version>5.0.0</osgi.version>
		<osgi.range>[5.0,6)</osgi.range>
		<blueprint.version>1.0.0</blueprint.version>
		<osgi.framework.range>[1.1,2)</osgi.framework.range>
		<blueprint.range>[1.0,1.2)</blueprint.range>
		<slf4j.version>1.7.7</slf4j.version>
		<slf4j.range>[1.7,2)</slf4j.range>

		<!-- xml binding -->
		<jaxb.api.version>2.2.11</jaxb.api.version>
		<jaxb.version>2.2.10-b140310.1920</jaxb.version>
		<jaxb.range>[2.2,3)</jaxb.range>
		<jaxb2.basics.version>0.6.5</jaxb2.basics.version>
		<jaxb2.basics.runtime.version>0.6.5.1</jaxb2.basics.runtime.version>
		<jaxb2.namespace.version>1.1</jaxb2.namespace.version>
		<jaxb22.plugin.version>0.8.3</jaxb22.plugin.version>
		<jaxws.version>2.2.9</jaxws.version>
		<jaxws.range>[2.2,3)</jaxws.range>
		<stax.range>[1.0,2)</stax.range>
		<woodstox.version>4.2.0</woodstox.version>
		<xstream.version>1.4.4</xstream.version>
		<wsdl4j.range>[1.6,2)</wsdl4j.range>
		<xerces.version>2.11.0</xerces.version>
		<xmlresolver.version>1.2</xmlresolver.version>
		<saxon.version>9.5.1-4</saxon.version>
		<saxon.range>[9.5,10)</saxon.range>

		<!-- cxf -->
		<cxf.version>2.7.11</cxf.version>
		<cxf.range>[2.7.11,3)</cxf.range>
		<cxf-xjc-utils.version>2.7.0</cxf-xjc-utils.version>
		<cxf-xjc-utils.range>[2.7,3)</cxf-xjc-utils.range>

		<!-- camel -->
		<camel.version>2.13.2</camel.version>
		<camel.range>[2.13,3)</camel.range>
		<activemq.version>5.10.0</activemq.version>

		<!-- spring -->
		<spring.version>3.2.5.RELEASE</spring.version>
		<spring.range>[3.2,4)</spring.range>

		<!-- utils -->
		<quartz.version>2.2.1</quartz.version>
		<quartz.range>[2.2,2.3)</quartz.range>
		<joda.version>2.1</joda.version>
		<joda.range>[2.1,3)</joda.range>
		<commons-lang.version>2.6</commons-lang.version>

		<!-- security -->
		<jasypt.version>1.9.2</jasypt.version>
		<jasypt.range>[1.9,3)</jasypt.range>
		<bouncycastle.version>1.50</bouncycastle.version>
		<bouncycastle.range>[1.50,2)</bouncycastle.range>

		<!-- containers -->
		<exam.version>3.4.0</exam.version>
		<exam.url.version>1.6.0</exam.url.version>
		<karaf.version>2.3.5</karaf.version>
		<felix.framework.version>4.0.3</felix.framework.version>
		<servicemix.version>5.1.1</servicemix.version>

		<!-- test -->
		<junit.version>4.11</junit.version>
		<soapui.version>5.0.0</soapui.version>

		<!-- OSGi configuration -->
		<osgi.exports>
			com.fleurida.camel;version="${project.version}"
		</osgi.exports>
		<osgi.imports>
			javax.xml.datatype,
			javax.xml.namespace,
			javax.xml.bind;version="${jaxb.range}",
			javax.xml.bind.annotation;version="${jaxb.range}",
			javax.xml.bind.annotation.adapters;version="${jaxb.range}",
			javax.xml.ws;version="[2.2,3)",
			javax.jws,
			javax.jws.soap,
			javax.wsdl,
			org.w3c.dom,
			org.slf4j;version="${slf4j.range}",
			org.joda.time;version="${joda.version}",
			org.joda.time.format;version="${joda.version}",
			org.apache.camel;version="${camel.range}",
			org.apache.camel.model;version="${camel.range}",
			org.apache.camel.converter.jaxb;version="${camel.range}",
			org.apache.camel.builder*;version="${camel.range}",
			org.apache.camel.processor;version="${camel.range}",
			org.apache.camel.processor.interceptor;version="${camel.range}",
			org.apache.camel.component.direct;version="${camel.range}",
			org.apache.camel.component.cxf;version="${camel.range}",
			org.apache.camel.component.cxf.common.header;version="${camel.range}",
			org.apache.camel.component.xquery;version="${camel.range}",
			org.apache.camel.component.directvm;version="${camel.range}",
			org.apache.camel.util.toolbox;version="${camel.range}",
			org.apache.camel.impl;version="${camel.range}",
			org.apache.camel.spi;version="${camel.range}",
			org.apache.cxf.interceptor;version="${cxf.range}",
			org.apache.cxf.jaxb;version="${cxf.range}",
			org.apache.cxf.message;version="${cxf.range}",
			org.apache.cxf.transport.common.gzip;version="${cxf.range}",
			org.apache.cxf.phase;version="${cxf.range}",
			org.apache.cxf.helpers;version="${cxf.range}",
			org.apache.cxf.headers;version="${cxf.range}",
			org.apache.cxf.binding.soap;version="${cxf.range}",
			org.apache.cxf.binding.soap.interceptor;version="${cxf.range}",
			org.apache.cxf.jaxrs;version="${cxf.range}",
			org.apache.cxf.jaxrs.blueprint;version="${cxf.range}",
			org.apache.cxf.jaxrs.ext;version="${cxf.range}",
			org.apache.cxf.jaxrs.provider;version="${cxf.range}",
			org.apache.cxf.jaxrs.provider.jsonp;version="${cxf.range}",
			org.apache.cxf.xjc.runtime;version="${cxf-xjc-utils.range}",

			org.springframework.util;version="${spring.range}",
			org.springframework.beans.factory;version="${spring.range}",
			org.springframework.dao;version="${spring.range}",
			org.springframework.transaction;version="${spring.range}",
			org.springframework.transaction.support;version="${spring.range}",
			net.sf.saxon
		</osgi.imports>
	</properties>

	<distributionManagement>
		<repository>
			<id>mvn.fareliner.com</id>
			<url>http://mvn.fareliner.com/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>mvn.fareliner.com</id>
			<url>http://mvn.fareliner.com/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>


		<!-- !!! ATTENTION: need newer version of asm to work with OSGi PojoSR 
			tests (assume all good in KARAF) .. needs to be up the top to get loaded 
			first -->
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-all</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-blueprint</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf-transport</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-soap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-saxon</artifactId>
		</dependency>

		<!-- cxf -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-bindings-soap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
		</dependency>
		<!-- needed for generated code at runtime -->
		<dependency>
			<groupId>org.apache.cxf.xjc-utils</groupId>
			<artifactId>cxf-xjc-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jvnet.jaxb2_commons</groupId>
			<artifactId>jaxb2-basics-runtime</artifactId>
		</dependency>
		<!-- needed for pretty tostring builder -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>
		<dependency>
			<groupId>xml-resolver</groupId>
			<artifactId>xml-resolver</artifactId>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>osgi-over-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-blueprint</artifactId>
		</dependency>


	</dependencies>

	<dependencyManagement>
		<dependencies>

			<!-- assuming camel is pulling aries 1.0.0, pull asm 4.0 first -->
			<dependency>
				<groupId>org.ow2.asm</groupId>
				<artifactId>asm-all</artifactId>
				<version>4.0</version>
			</dependency>

			<!-- Public APIs -->
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.jaxb-api-2.2</artifactId>
				<version>2.4.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.servicemix.specs</groupId>
				<artifactId>org.apache.servicemix.specs.java-persistence-api-2.0</artifactId>
				<version>2.4.0</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-jpa_2.0_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
				<version>1.1.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
				<version>2.0.0</version>
			</dependency>

			<!-- jaxb runtime -->
			<dependency>
				<groupId>org.jvnet.jaxb2_commons</groupId>
				<artifactId>jaxb2-basics-runtime</artifactId>
				<version>${jaxb2.basics.runtime.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
			</dependency>
			<dependency>
				<groupId>xml-resolver</groupId>
				<artifactId>xml-resolver</artifactId>
				<version>${xmlresolver.version}</version>
			</dependency>

			<!-- logging spec -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- OSGi -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${osgi.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>${osgi.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- apache aries osgi IoC -->
			<dependency>
				<groupId>org.apache.aries.blueprint</groupId>
				<artifactId>org.apache.aries.blueprint.api</artifactId>
				<version>${blueprint.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.quiesce</groupId>
				<artifactId>org.apache.aries.quiesce.api</artifactId>
				<version>${blueprint.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.blueprint</groupId>
				<artifactId>org.apache.aries.blueprint.core</artifactId>
				<version>1.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.blueprint</groupId>
				<artifactId>org.apache.aries.blueprint.cm</artifactId>
				<version>${blueprint.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.karaf.jaas</groupId>
				<artifactId>org.apache.karaf.jaas.modules</artifactId>
				<version>${karaf.version}</version>
			</dependency>

			<!-- OSGi testing stuff -->
			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-junit4</artifactId>
				<version>${exam.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-link-mvn</artifactId>
				<version>${exam.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-link-assembly</artifactId>
				<version>${exam.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.url</groupId>
				<artifactId>pax-url-wrap</artifactId>
				<version>${exam.url.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.url</groupId>
				<artifactId>pax-url-aether</artifactId>
				<version>${exam.url.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-container-native</artifactId>
				<version>${exam.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.framework</artifactId>
				<version>${felix.framework.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-container-karaf</artifactId>
				<version>${exam.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.karaf</groupId>
				<artifactId>apache-karaf</artifactId>
				<version>${karaf.version}</version>
				<type>tar.gz</type>
				<scope>test</scope>
			</dependency>

			<!-- runtime adapters -->
			<dependency>
				<groupId>org.apache.cxf.xjc-utils</groupId>
				<artifactId>cxf-xjc-runtime</artifactId>
				<version>${cxf-xjc-utils.version}</version>
			</dependency>

			<!-- Camel -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-blueprint</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jaxb</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring-security</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jasypt</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-http</artifactId>
				<version>${camel.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- exclude bluerprint from camel-cxf as we have them already from camel-blueprint 
				and we need to avoid duplicate JARs in the classpath as then blueprint start 
				up twice -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf</artifactId>
				<version>${camel.version}</version>
				<exclusions>
					<!-- got our own container settings for OSGi -->
					<exclusion>
						<groupId>org.apache.aries.blueprint</groupId>
						<artifactId>org.apache.aries.blueprint.api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.aries.quiesce</groupId>
						<artifactId>org.apache.aries.quiesce.api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.aries.blueprint</groupId>
						<artifactId>org.apache.aries.blueprint.core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.aries.blueprint</groupId>
						<artifactId>org.apache.aries.blueprint.cm</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf-transport</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-soap</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-saxon</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-quartz2</artifactId>
				<version>${camel.version}</version>
			</dependency>

			<!-- CXF dependencies -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-api</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- CXF JAXWS and WS-* -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-soap</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-security</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-addr</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-policy</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-rm</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.security</groupId>
				<artifactId>wss4j</artifactId>
				<version>1.6.7</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>woodstox-core-asl</artifactId>
				<version>${woodstox.version}</version>
			</dependency>

			<!-- CXF JAXRS -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-extension-providers</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- CXF HTTP transport -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
				<!-- may use for testing only -->
			</dependency>


			<!-- froce spring version -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-asm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Spring for transaction management -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- security -->
			<dependency>
				<groupId>org.jasypt</groupId>
				<artifactId>jasypt</artifactId>
				<version>${jasypt.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<!-- other -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>

			<!-- logging -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging-api</artifactId>
				<version>99.0-does-not-exist</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>99.0-does-not-exist</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>osgi-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.15</version>
				<exclusions>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- testing stuff -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test-blueprint</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-testutils</artifactId>
				<version>${cxf.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- soapui testing -->
			<dependency>
				<groupId>com.smartbear.soapui</groupId>
				<artifactId>soapui</artifactId>
				<version>${soapui.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- paxexam test features -->
			<dependency>
				<groupId>org.apache.camel.karaf</groupId>
				<artifactId>apache-camel</artifactId>
				<version>${camel.version}</version>
				<type>xml</type>
				<classifier>features</classifier>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf.karaf</groupId>
				<artifactId>apache-cxf</artifactId>
				<version>${cxf.version}</version>
				<scope>test</scope>
				<type>xml</type>
				<classifier>features</classifier>
			</dependency>

			<dependency>
				<groupId>org.apache.karaf.assemblies.features</groupId>
				<artifactId>standard</artifactId>
				<version>${karaf.version}</version>
				<scope>test</scope>
				<type>xml</type>
				<classifier>features</classifier>
			</dependency>

			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-karaf</artifactId>
				<version>${activemq.version}</version>
				<scope>test</scope>
				<type>xml</type>
				<classifier>features</classifier>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>

			<!-- endorsed -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>



			<!-- generate wsdl bindings -->
			<plugin>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-codegen-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-wsdl-bindings</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<wsdlOptions>
								<wsdlOption>
									<bindingFiles>
										<bindingFile>${project.basedir}/src/main/resources/global.jaxb.xml</bindingFile>
										<bindingFile>${project.basedir}/src/main/resources/wsdl/SessionResource.jaxb.xml</bindingFile>
									</bindingFiles>
									<wsdl>${project.basedir}/src/main/resources/wsdl/SessionResource.wsdl</wsdl>
									<faultSerialVersionUID>1</faultSerialVersionUID>
								</wsdlOption>
							</wsdlOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generate OSGi info -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<configuration>
					<instructions>
						<Bundle-Category>Bugs</Bundle-Category>
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Description>${project.description}</Bundle-Description>
						<Export-Package>${osgi.exports}</Export-Package>
						<Import-Package>${osgi.imports}</Import-Package>
						<!-- force blueprint or this darn spring extender stuffs everything 
							up -->
						<Blueprint-Bundle>OSGI-INF/blueprint/blueprint.xml</Blueprint-Bundle>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- compiler plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${maven.compile.source}</source>
						<target>${maven.compile.target}</target>
						<!-- patched jaxb -->
						<compilerArguments>
							<endorseddirs>${project.build.directory}/endorsed</endorseddirs>
						</compilerArguments>
						<!-- compiler debug -->
						<debug>true</debug>
						<debuglevel>lines,vars,source</debuglevel>
						<optimize>true</optimize>
					</configuration>
				</plugin>
				<!-- OSGi bundling plugin -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.4.0</version>
					<extensions>true</extensions>
				</plugin>
				<!-- running camel from mvn -->
				<plugin>
					<groupId>org.apache.camel</groupId>
					<artifactId>camel-maven-plugin</artifactId>
					<version>${camel.version}</version>
					<configuration>
						<useBlueprint>true</useBlueprint>
						<logClasspath>true</logClasspath>
					</configuration>
				</plugin>
				<!-- resources plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<!-- ensure the dedicated JAXB and JAXWS versions are unpacked into the 
					endorsed directory -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>setup-endorsed</id>
							<phase>validate</phase>
							<goals>
								<goal>copy</goal>
							</goals>
							<configuration>
								<artifactItems>
									<artifactItem>
										<groupId>javax.xml.bind</groupId>
										<artifactId>jaxb-api</artifactId>
										<version>${jaxb.api.version}</version>
									</artifactItem>
									<artifactItem>
										<groupId>javax.xml.ws</groupId>
										<artifactId>jaxws-api</artifactId>
										<version>${jaxws.version}</version>
									</artifactItem>
									<artifactItem>
										<groupId>xerces</groupId>
										<artifactId>xercesImpl</artifactId>
										<version>${xerces.version}</version>
									</artifactItem>
								</artifactItems>
								<outputDirectory>${project.build.directory}/endorsed</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- used to generate the test bindings -->
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-codegen-plugin</artifactId>
					<version>${cxf.version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${jaxb.api.version}</version>
						</dependency>
						<dependency>
							<groupId>org.glassfish.jaxb</groupId>
							<artifactId>jaxb-runtime</artifactId>
							<version>${jaxb.version}</version>
						</dependency>
						<dependency>
							<groupId>com.sun.xml.bind</groupId>
							<artifactId>jaxb-xjc</artifactId>
							<version>${jaxb.version}</version>
						</dependency>
						<dependency>
							<groupId>org.glassfish.jaxb</groupId>
							<artifactId>jaxb-runtime</artifactId>
							<version>${jaxb.version}</version>
						</dependency>
						<!-- plugins for the xjc compiler -->
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-bindings-soap</artifactId>
							<version>${cxf.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.cxf.xjcplugins</groupId>
							<artifactId>cxf-xjc-ts</artifactId>
							<version>${cxf-xjc-utils.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.cxf.xjcplugins</groupId>
							<artifactId>cxf-xjc-dv</artifactId>
							<version>${cxf-xjc-utils.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.cxf.xjcplugins</groupId>
							<artifactId>cxf-xjc-bug671</artifactId>
							<version>${cxf-xjc-utils.version}</version>
						</dependency>
						<dependency>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-basics</artifactId>
							<version>${jaxb2.basics.version}</version>
						</dependency>
						<dependency>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-basics-annotate</artifactId>
							<version>${jaxb2.basics.version}</version>
						</dependency>
						<dependency>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-namespace-prefix</artifactId>
							<version>${jaxb2.namespace.version}</version>
						</dependency>
						<dependency>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-fluent-api</artifactId>
							<version>3.0</version>
						</dependency>
						<!-- runtime dependencies -->
						<dependency>
							<groupId>org.jvnet.jaxb2_commons</groupId>
							<artifactId>jaxb2-basics-runtime</artifactId>
							<version>${jaxb2.basics.runtime.version}</version>
						</dependency>
						<dependency>
							<groupId>xerces</groupId>
							<artifactId>xercesImpl</artifactId>
							<version>${xerces.version}</version>
						</dependency>
						<dependency>
							<groupId>xml-resolver</groupId>
							<artifactId>xml-resolver</artifactId>
							<version>${xmlresolver.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<defaultOptions>
							<noTypes>false</noTypes>
							<markGenerated>false</markGenerated>
							<noAddressBinding>true</noAddressBinding>
							<xjcargs>
								<xjcarg>-Xannotate</xjcarg>
								<xjcarg>-Xinheritance</xjcarg>
								<xjcarg>-Xdv</xjcarg>
								<xjcarg>-Xts</xjcarg>
								<xjcarg>-Xts:style:org.apache.cxf.xjc.runtime.JAXBToStringStyle.SIMPLE_STYLE</xjcarg>
								<xjcarg>-Xfluent-api</xjcarg>
								<xjcarg>-Xnamespace-prefix</xjcarg>
							</xjcargs>
						</defaultOptions>
					</configuration>
				</plugin>
				<!-- surefire -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
					<configuration>
						<forkCount>1</forkCount>
						<reuseForks>true</reuseForks>
						<!-- FIXME disable the manifest jar as the classpath scanner cannot 
							deal with it in the unit tests -->
						<useManifestOnlyJar>false</useManifestOnlyJar>
						<!-- patched jaxb -->
						<systemProperties>
							<property>
								<name>java.endorsed.dirs</name>
								<value>${project.build.directory}/endorsed</value>
							</property>
						</systemProperties>
					</configuration>
				</plugin>
				<!-- soapui testing -->
				<plugin>
					<groupId>com.smartbear.soapui</groupId>
					<artifactId>soapui-maven-plugin</artifactId>
					<version>${soapui.version}</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.servicemix.tooling</groupId>
										<artifactId>depends-maven-plugin</artifactId>
										<versionRange>[1.2,)</versionRange>
										<goals>
											<goal>generate-depends-file</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-assembly-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>single</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.felix</groupId>
										<artifactId>maven-bundle-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.smartbear.soapui</groupId>
										<artifactId>soapui-maven-plugin</artifactId>
										<versionRange>[4.0,)</versionRange>
										<goals>
											<goal>mock</goal>
											<goal>test</goal>
											<goal>loadtest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>blocking-mock</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- start mock service for integration tests -->
					<plugin>
						<groupId>com.smartbear.soapui</groupId>
						<artifactId>soapui-maven-plugin</artifactId>
						<configuration>
							<projectFile>src/main/resources/SessionManager-soapui-project.xml</projectFile>
							<outputFolder>${project.build.directory}/surefire-reports</outputFolder>
							<junitReport>true</junitReport>
							<host>http://127.0.0.1:8088</host>
							<mockService>Sabre MockService</mockService>
							<noBlock>false</noBlock>
						</configuration>
						<executions>
							<execution>
								<id>sabre-mock</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>mock</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jdk-1.5</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>1.5</jdk>
			</activation>
			<properties>
				<!-- Default configuration for compiler source and target JVM -->
				<maven.compile.source>1.5</maven.compile.source>
				<maven.compile.target>1.5</maven.compile.target>
			</properties>
		</profile>
		<profile>
			<id>jdk-1.6</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>1.6</jdk>
			</activation>
			<properties>
				<!-- Default configuration for compiler source and target JVM -->
				<maven.compile.source>1.6</maven.compile.source>
				<maven.compile.target>1.6</maven.compile.target>
			</properties>
		</profile>
		<profile>
			<id>jdk-7</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>1.7</jdk>
			</activation>
			<properties>
				<!-- Default configuration for compiler source and target JVM -->
				<maven.compile.source>1.7</maven.compile.source>
				<maven.compile.target>1.7</maven.compile.target>
			</properties>
		</profile>
	</profiles>

</project>
